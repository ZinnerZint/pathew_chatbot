import streamlit as st
from chatbot import get_answer

# ---------- Page setup ----------
st.set_page_config(page_title="Pathew Chatbot", page_icon="üå¥", layout="centered")
st.markdown(
    "<h1 style='margin-bottom:0'>üå¥ AI Chatbot ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏ô‡∏≠‡∏≥‡πÄ‡∏†‡∏≠‡∏õ‡∏∞‡∏ó‡∏¥‡∏ß</h1>",
    unsafe_allow_html=True,
)
st.caption("‡∏ñ‡∏≤‡∏°‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢ ‡πÄ‡∏ä‡πà‡∏ô: *‡∏£‡πâ‡∏≤‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ñ‡∏π‡∏Å‡πÅ‡∏ñ‡∏ß‡∏ö‡∏≤‡∏á‡∏™‡∏ô*, *‡∏°‡∏µ‡∏õ‡∏±‡πä‡∏°‡∏ô‡πâ‡∏≥‡∏°‡∏±‡∏ô‡πÉ‡∏Å‡∏•‡πâ‡πÜ ‡πÑ‡∏´‡∏°*")

# ---------- Session state ----------
if "messages" not in st.session_state:
    st.session_state.messages = [
        {"role": "assistant", "content": "‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡∏£‡∏±‡∏ö! ‡∏≠‡∏¢‡∏≤‡∏Å‡∏´‡∏≤‡∏≠‡∏∞‡πÑ‡∏£‡πÉ‡∏ô‡∏õ‡∏∞‡∏ó‡∏¥‡∏ß‡∏ö‡∏≠‡∏Å‡∏ú‡∏°‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢ üå¥"}
    ]

# ---------- Render history ----------
for msg in st.session_state.messages:
    avatar = (
        "dcbba2d5-a589-4987-b3f7-d0dfe7b7fcac.png" if msg["role"] == "user"
        else "5ced3321-8811-400e-b7f0-832e4e5220c1.png"
    )
    with st.chat_message(msg["role"], avatar=avatar):
        st.markdown(msg["content"])

# ---------- Chat input ----------
user_input = st.chat_input("‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏ô‡∏õ‡∏∞‡∏ó‡∏¥‡∏ß‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢‚Ä¶")

if user_input:
    # ‡πÅ‡∏™‡∏î‡∏á + ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ù‡∏±‡πà‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
    st.session_state.messages.append({"role": "user", "content": user_input})
    with st.chat_message("user", avatar="dcbba2d5-a589-4987-b3f7-d0dfe7b7fcac.png"):
        st.markdown(user_input)

    # ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏™‡∏°‡∏≠‡∏á
    reply_text, places = get_answer(user_input)

    # ‡πÅ‡∏™‡∏î‡∏á + ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ù‡∏±‡πà‡∏á‡∏ö‡∏≠‡∏ó
    with st.chat_message("assistant", avatar="5ced3321-8811-400e-b7f0-832e4e5220c1.png"):
        st.markdown(reply_text)

        if places:
            for p in places:
                name = p.get("name", "-")
                desc = (p.get("description") or "").strip()
                img = p.get("image_url")
                lat, lng = p.get("latitude"), p.get("longitude")
                map_link = f"https://www.google.com/maps?q={lat},{lng}" if lat and lng else None

                with st.container(border=True):
                    cols = st.columns([1, 2])
                    with cols[0]:
                        if isinstance(img, str) and img.startswith("http"):
                            st.image(img, use_container_width=True)
                        else:
                            st.markdown("üñºÔ∏è ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏π‡∏õ")
                    with cols[1]:
                        st.markdown(f"**{name}**  \n{desc or '‚Äî'}")
                        st.markdown(f"**‡∏ï‡∏≥‡∏ö‡∏•:** {p.get('tambon','-')}  |  **‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó:** {p.get('category','-')}")
                        if map_link:
                            st.markdown(f"[üó∫Ô∏è ‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà]({map_link})")

    st.session_state.messages.append({"role": "assistant", "content": reply_text})
